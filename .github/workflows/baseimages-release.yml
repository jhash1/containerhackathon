name: "Base Image: Java - Release"

on:
  pull_request:
    paths-ignore: 
      - 'containers/**'
    types:
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      imagetag: "latest"
      containerpath: "baseimages/java"
      registry: "ghcr.io/${{ github.repository_owner }}"
    permissions: write-all
    steps:
      - name: release-please-action
        uses: googleapis/release-please-action@v4.1.3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - name: Docker Login
        if: ${{ steps.release.outputs.release_created }}
        uses: azure/docker-login@v2
        with:
          login-server: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Organization Name to Lowercase
        if: ${{ steps.release.outputs.release_created }}
        run: echo "registry_name=$(echo $registry | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull the existing image
        if: ${{ steps.release.outputs.release_created }}
        run: docker pull ${{ env.registry_name }}/$(basename $containerpath):$imagetag

      - name: Tag the image with release version
        if: ${{ steps.release.outputs.release_created }}
        run: docker tag ${{ env.registry_name }}/$(basename $containerpath):$imagetag ${{ env.registry_name }}/$(basename $containerpath):${{ steps.release.outputs.tag_name }}

      - name: Push the tagged image
        if: ${{ steps.release.outputs.release_created }}
        run: docker push ${{ env.registry_name }}/$(basename $containerpath):${{ steps.release.outputs.tag_name }}

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - name: Update Changelog
        if: ${{ steps.release.outputs.release_created }}
        run: |
          regname=${{ env.registry_name }}
          containername=$(basename $containerpath)
          tagvalue=${{ steps.release.outputs.tag_name }}

          # Create a backup of the original file
          cp ./CHANGELOG.md ./CHANGELOG.md.bak
          
          # Find the first occurrence of "## [" and insert the new line after it
          awk -v regname="$regname" \
              -v containername="$containername" \
              -v tagvalue="$tagvalue" '
            /^## \[/ && !found {
              print $0;
              print "\n";
              print "Install from command line:";
              print "\n";
              print "``` shell";
              print "docker pull " regname "/" containername ":" tagvalue;
              print "```";
              print "\n";
              print "Use as base image in Dockerfile:";
              print "\n";
              print "``` shell";
              print "FROM " regname "/" containername ":" tagvalue;
              print "```";
              found=1;
              next
            }
            {print}
          ' CHANGELOG.md.bak > CHANGELOG.md
          
      - name: Commit changes
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add CHANGELOG.md
          git commit -m "docs: update changelog"
          git push


